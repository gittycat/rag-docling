services:
  # WebApp - SvelteKit frontend for RAG system
  webapp:
    build:
      context: ./services/webapp
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:5173"
    environment:
      - RAG_SERVER_URL=http://rag-server:8001
      - MAX_UPLOAD_SIZE=80
    depends_on:
      rag-server:
        condition: service_healthy
    networks:
      - public
      - private
    volumes:
      - ./services/webapp:/app
      - webapp_node_modules:/app/node_modules

  # RAG Server - API service for document processing and querying
  rag-server:
    build:
      context: .
      dockerfile: ./services/rag_server/Dockerfile
    user: "1000:1000"
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - CHROMADB_URL=http://chromadb:8000
      - OLLAMA_URL=http://host.docker.internal:11434
      - EMBEDDING_MODEL=nomic-embed-text:latest
      - LLM_MODEL=gemma3:4b    # llama3.2:latest is slower
      - ENABLE_RERANKER=true
      - RERANKER_MODEL=cross-encoder/ms-marco-MiniLM-L-6-v2
      - RETRIEVAL_TOP_K=10
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=DEBUG
      - MAX_UPLOAD_SIZE=80                # Max file upload size in MB
      # Phase 2: High-Impact Retrieval Improvements
      - ENABLE_HYBRID_SEARCH=true         # BM25 + Vector with RRF fusion
      - RRF_K=60                          # Reciprocal Rank Fusion k parameter (optimal: 60)
      - ENABLE_CONTEXTUAL_RETRIEVAL=true  # Anthropic method: 49% reduction in retrieval failures
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      chromadb:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health', timeout=2)"]
      interval: 1s
      timeout: 2s
      retries: 5
      start_period: 3s
    networks:
      - private
      - public
    volumes:
      - ./data/indexed_documents:/app/documents
      - docs_repo:/tmp/shared
    secrets:
      - ollama_config

  # ChromaDB Vector Database (private network only)
  chromadb:
    image: chromadb/chroma:latest
    environment:
      - IS_PERSISTENT=TRUE
      - ANONYMIZED_TELEMETRY=FALSE
    volumes:
      - chroma_db_data:/chroma/chroma
    networks:
      - private
    restart: unless-stopped

  # Redis - Message broker and result backend for Celery
  redis:
    image: redis:8-alpine
    command: redis-server --loglevel warning --save "" --appendonly no
    networks:
      - private
    restart: unless-stopped

  # Celery Worker - Async document processing
  celery-worker:
    build:
      context: .
      dockerfile: ./services/rag_server/Dockerfile
    command: [".venv/bin/celery", "-A", "celery_app", "worker", "--loglevel=info", "--concurrency=2", "--without-mingle", "--without-gossip"]
    user: "1000:1000"
    restart: unless-stopped
    environment:
      - CHROMADB_URL=http://chromadb:8000
      - OLLAMA_URL=http://host.docker.internal:11434
      - EMBEDDING_MODEL=nomic-embed-text:latest
      - LLM_MODEL=gemma3:4b    # llama3.2:latest is slower
      - ENABLE_RERANKER=true
      - RERANKER_MODEL=cross-encoder/ms-marco-MiniLM-L-6-v2
      - RETRIEVAL_TOP_K=10
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - MAX_UPLOAD_SIZE=80                # Max file upload size in MB
      # Phase 2: High-Impact Retrieval Improvements
      - ENABLE_HYBRID_SEARCH=true         # BM25 + Vector with RRF fusion
      - RRF_K=60                          # Reciprocal Rank Fusion k parameter (optimal: 60)
      - ENABLE_CONTEXTUAL_RETRIEVAL=true  # Anthropic method: 49% reduction in retrieval failures
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - redis
      - chromadb
      - rag-server
    networks:
      - private
      - public
    volumes:
      - ./data/indexed_documents:/app/documents
      - docs_repo:/tmp/shared
    secrets:
      - ollama_config

# Network configuration for security isolation
networks:
  public:
    driver: bridge
  private:
    driver: bridge
    internal: true

# Persistent volumes
volumes:
  chroma_db_data:
    driver: local
  docs_repo:
    driver: local
  webapp_node_modules:
    driver: local

# Secrets management
secrets:
  ollama_config:
    file: ./secrets/ollama_config.env 